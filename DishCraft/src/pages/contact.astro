---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import BlogPost from '../layouts/BlogPost.astro';

const pageTitle = "Contact Us";
const description = "Get in touch with us";
const pubDate = new Date();
---

<BlogPost 
  title={pageTitle}
  description={description}
  pubDate={pubDate}>
  <main>
    <h1>{description}</h1>
    <p>We'd love to hear from you! Here's how you can reach us:</p>
    
    <div class="contact-methods">
      <div class="contact-method">
        <h2>Email</h2>
        <p><a href="mailto:info@dishcraft.ca">info@dishcraft.ca</a></p>
      </div>
      
      <div class="contact-method">
        <h2>GitHub</h2>
        <ul>
          <li><a href="https://github.com/ProgramDyl/DishCraft">Dishcraft</a></li>
        </ul>
      </div>
      
      <div class="contact-method form-method">
        <h2>Contact Form</h2>
        <form id="contact-form">
          <div class="form-group">
            <label for="name">Name</label>
            <input type="text" id="name" name="name">
            <span id="name-error" class="error"></span>
          </div>
          
          <div class="form-group">
            <label for="email">Email</label>
            <input type="email" id="email" name="email">
            <span id="email-error" class="error"></span>
          </div>
          
          <div class="form-group">
            <label for="message">Message</label>
            <textarea id="message" name="message" rows="5"></textarea>
            <span id="message-error" class="error"></span>
          </div>
          
          <button type="submit" id="submit-button">Send Message</button>
        </form>
        <div id="form-status"></div>
      </div>
    </div>
  </main>
</BlogPost>

<style>
  main {
  margin: auto;
  padding: 1rem;
  max-width: 800px;
}

h1 {
  font-size: 2.0rem;
  margin-bottom: 1rem;
}

h2 {
  font-size: 2.0rem;
  margin-bottom: 1rem;
}

.contact-methods {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 2rem; /* Increased gap between contact methods */
  margin-top: 2rem;
}

.form-method {
  grid-column: span 2;
}

.contact-method {
  padding: 1.5rem;
  border-radius: 8px;
  background-color: #f9f9f9;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  margin-bottom: 2rem;
}

label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 500;
}

input, textarea {
  width: 100%;
  padding: 0.5rem;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-family: inherit;
}

button {
  background-color: #4f6df5;
  color: white;
  border: none;
  padding: 0.75rem 1.5rem;
  border-radius: 4px;
  cursor: pointer;
  font-weight: 600;
  margin-top: 0.5rem;
}

button:hover {
  background-color: #3b5bdb;
}

.error {
  color: red;
  font-size: 0.9rem;
  margin-top: 0.5rem;
  display: block;
}

#form-status {
  margin-top: 1rem;
  padding: 0.5rem;
  border-radius: 4px;
}

.success {
  background-color: #d4edda;
  color: #155724;
  border: 1px solid #c3e6cb;
}

.failure {
  background-color: #f8d7da;
  color: #721c24;
  border: 1px solid #f5c6cb;
}

/* Media Queries for Responsiveness */

/* For tablets and smaller screens (max-width: 768px) */
@media (max-width: 768px) {
  .contact-methods {
    grid-template-columns: 1fr 1fr;
    gap: 1.5rem;
  }

  .contact-method {
    padding: 1rem;
  }

  h1 {
    font-size: 1.5rem;
  }

  h2 {
    font-size: 1.5rem;
  }

  input, textarea {
    padding: 0.75rem;
  }

  button {
    padding: 0.75rem 1rem;
    font-size: 1rem;
  }
}

/* For mobile devices (max-width: 480px) */
@media (max-width: 480px) {
  main {
    padding: 1rem; /* More padding for smaller screens */
  }

  h1 {
    font-size: 1.25rem; /* Smaller font for smaller screens */
  }

  h2 {
    font-size: 1.25rem;
  }

  .contact-methods {
    grid-template-columns: 1fr; /* Stack contact methods vertically */
    gap: 1rem; /* Reduce gap */
  }

  .contact-method {
    padding: 1rem;
    width: 100%;
    margin-bottom: 1.5rem;
  }

  .form-method {
    grid-column: span 1;
    width: 100%;
  }

  input, textarea {
    padding: 1rem;
  }

  button {
    padding: 0.75rem 1rem;
    font-size: 1rem;
  }

  .error {
    font-size: 0.8rem; /* Smaller font for error messages */
  }

  #form-status {
    padding: 0.5rem;
  }
}
</style>

<script is:inline>
  document.addEventListener('DOMContentLoaded', function() {
    console.log("DOM fully loaded");
    
    const form = document.getElementById('contact-form');
    const nameInput = document.getElementById('name');
    const emailInput = document.getElementById('email');
    const messageInput = document.getElementById('message');
    const nameError = document.getElementById('name-error');
    const emailError = document.getElementById('email-error');
    const messageError = document.getElementById('message-error');
    const formStatus = document.getElementById('form-status');
    
    // Debug check
    console.log("Form element:", form);
    console.log("Name input:", nameInput);
    
    if (form) {
      form.addEventListener('submit', function(event) {
        event.preventDefault();
        console.log("Form submitted, running validation");
        
        // Reset error messages
        nameError.textContent = '';
        emailError.textContent = '';
        messageError.textContent = '';
        formStatus.textContent = '';
        formStatus.className = '';
        
        let isValid = true;
        
        // Validate name
        if (!nameInput.value.trim()) {
          nameError.textContent = 'Name is required';
          isValid = false;
          console.log("Name validation failed");
        }
        
        // Validate email
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailInput.value.trim() || !emailRegex.test(emailInput.value.trim())) {
          emailError.textContent = 'Please enter a valid email address';
          isValid = false;
          console.log("Email validation failed");
        }
        
        // Validate message
        if (!messageInput.value.trim()) {
          messageError.textContent = 'Message is required';
          isValid = false;
          console.log("Message validation failed");
        }
        
        if (isValid) {
          console.log("Form validation passed");
          formStatus.textContent = 'Form submitted successfully!';
          formStatus.className = 'success';
          form.reset();
        } else {
          console.log("Form validation failed");
          formStatus.textContent = 'Please fix the errors above.';
          formStatus.className = 'failure';
        }
      });
    } else {
      console.error("Contact form not found in the DOM");
    }
  });
</script>